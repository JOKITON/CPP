class Form {
    private:
         const std::string _name;
         bool _signed;
         const int _gradeSign;
         const int _gradeExec;
    public:
         Form( void );
         ~Form( void );
         Form( Form& p );
         Form& operator=( Form& p );

         std::string & const getName( void ) const;
         bool getStatus( void );
         const int getGradeSign( void ) const;
         const int getGradeExec( void ) const;

};

Form::Form( void ) : _name( "default" ), _signed( FALSE ),  _gradeSign( 25 ), _gradeExec( 10 ) {
    std::cout << "[Form] Default 'constructor' has been called." << std::endl;
}

Form::~Form( void ) {
    std::cout << "[Form] Default 'destructor' has been called." << std::endl;
}

Form::Form( Form& p ) {
    std::cout << "[Form] Copy constructor from '" << p.getName() << "' has been called." << std::endl;
    this->_name = p.getName();
    this->_signed = p.getStatus();
    this->_gradeSign = p.getGradeSign();
    this->_gradeExec = p.getGradeExec();
}


Form& operator=( Form& p ) {
    std::cout << "[Form] Assignment Operator called from '" << p.getName() << "' to '" << this->_name << "'has been called." << std::endl;
    if( this != &p ) {
        this->_name = p.getName();
        this->_signed = p.getStatus();
        this->_gradeSign = p.getGradeSign();
        this->_gradeExec = p.getGradeExec(); 
    }
    return (*this);
}

std::string & const Form::getName( void ) const {
    return this->_name;
}

bool Form::getStatus( void ) {
    return this->_signed;
}

const int Form::getGradeSign( void ) const {
    return this->_gradeSign;
}

const int Form::getGradeExec( void ) const {
    return this->_gradeExec;
}